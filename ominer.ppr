program ominer;

{$mode objfpc}{$H+}

uses
  {$IFDEF UNIX}
  //{$IFDEF UseCThreads}
  cthreads, cmem,
  {$ENDIF}
  //{$ENDIF}
  Classes, SysUtils, CustApp, utils, constants
  ;

type

  { TOHLCAPP }

  TOHLCAPP = class(TCustomApplication)
  protected
    procedure DoRun; override;
  public
    constructor Create(TheOwner: TComponent); override;
    destructor Destroy; override;
    procedure WriteHelp; virtual;
  end;

{ TOHLCAPP }

procedure TOHLCAPP.DoRun;
var
  ErrorMsg: String;
begin
  // quick check parameters
  ErrorMsg:=CheckOptions('s', 'server');
  if ErrorMsg<>'' then begin
    ShowException(Exception.Create(ErrorMsg));
    Terminate;
    Exit;
  end;

  //// emulate server type
  //if HasOption('s', 'server') then begin
  //  writeln('Server mode.');
  //  initServer();
  //  halt;;
  //end;

  { add your program here }

  //initMiner();
  RunModel();
  // stop program loop
  Terminate;
end;

constructor TOHLCAPP.Create(TheOwner: TComponent);
begin
  inherited Create(TheOwner);
  StopOnException:=True;
end;

destructor TOHLCAPP.Destroy;
begin
  inherited Destroy;
end;

procedure TOHLCAPP.WriteHelp;
begin
  { add your help code here }
  writeln('Usage: ', ExeName, ' -h');
end;

var
  Application: TOHLCAPP;
begin
  Application:=TOHLCAPP.Create(nil);
  Application.Title:='OHLChain';
  Application.Run;
  Application.Free;
end.

